{"version":3,"sources":["logo.svg","Guardian.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","queryFromInput","setQueryFromInput","articles","setArticles","pages","setPages","onClickFunc","fetch","then","response","json","data","console","log","results","useEffect","className","Input","valueProp","onChangeProp","inputvalue","Button","onClick","map","article","href","webUrl","target","webTitle","id","newPage","value","onChange","e","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAAe,I,mBCIA,SAASA,IACtB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAQMC,EAAc,WAClBC,MAAM,6CAAD,OAC0CP,EAD1C,kBAGFQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZR,EAAYQ,EAAKF,SAASK,aAIhCC,qBAAU,WACRT,MACC,IAmCH,OACE,sBAAKU,UAAU,MAAf,UAEE,cAACC,EAAD,CAAOC,UAAWlB,EAAgBmB,aAzDjB,SAAAC,GAGnBnB,EAAkBmB,MAuDhB,cAACC,EAAD,CAAQC,QAAShB,IACjB,6CACCJ,EAASqB,KAAI,SAAAC,GACZ,OACE,4BACE,mBAAGC,KAAMD,EAAQE,OAAQC,OAAO,SAAhC,SACGH,EAAQI,YAFLJ,EAAQK,OAOpB,wBAAQP,QAjCS,WACnB,GAAc,IAAVlB,EAAJ,CAGA,IAAM0B,EAAU1B,EAAQ,EAExBC,EAASyB,GAETvB,MAAM,gDAAD,OAC6CuB,EAD7C,cAC0D9B,EAD1D,kBAGFQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZR,EAAYQ,EAAKF,SAASK,cAmB5B,kBACA,wBAAQQ,QAjDK,WACf,IAAMQ,EAAU1B,EAAQ,EAExBC,EAASyB,GAETvB,MAAM,gDAAD,OAC6CuB,EAD7C,cAC0D9B,EAD1D,kBAGFQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZR,EAAYQ,EAAKF,SAASK,aAsC5B,qBAON,SAASG,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAK1B,OACE,qBAAKH,UAAU,cAAf,SACE,uBAAOe,MAAOb,EAAWc,SANJ,SAAAC,GACvBd,EAAac,EAAEN,OAAOI,YAY1B,SAASV,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAChB,OACE,qBAAKN,UAAU,eAAf,SACE,qBAAKA,UAAU,cAAf,SACE,wBAAQkB,KAAK,SAASlB,UAAU,kBAAkBM,QAASA,EAA3D,wBC9FOxB,MARf,WACE,OACE,qBAAKkB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.49c46b23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\n\n// --------------------------- GUARDIAN -----------------------------------------------------\n\nexport default function App() {\n  const [queryFromInput, setQueryFromInput] = useState(\"\");\n\n  const [articles, setArticles] = useState([]);\n\n  const [pages, setPages] = useState(1);\n\n  const onChangeFunc = inputvalue => {\n    // посылает запрос с инпут валю и рендерит с ответом\n\n    setQueryFromInput(inputvalue);\n  };\n\n  const onClickFunc = () => {\n    fetch(\n      `https://content.guardianapis.com/search?q=${queryFromInput}&api-key=test`\n    )\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setArticles(data.response.results);\n      });\n  };\n\n  useEffect(() => {\n    onClickFunc();\n  }, []);\n\n  const nextPage = () => {\n    const newPage = pages + 1;\n\n    setPages(newPage);\n\n    fetch(\n      `https://content.guardianapis.com/search?page=${newPage}&q=${queryFromInput}&api-key=test`\n    )\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setArticles(data.response.results);\n      });\n  };\n\n  const PreviousPage = () => {\n    if (pages === 1) {\n      return;\n    }\n    const newPage = pages - 1;\n\n    setPages(newPage);\n\n    fetch(\n      `https://content.guardianapis.com/search?page=${newPage}&q=${queryFromInput}&api-key=test`\n    )\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setArticles(data.response.results);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      {/* <Modal onCloseClick={hideModal}/> */}\n      <Input valueProp={queryFromInput} onChangeProp={onChangeFunc} />\n      <Button onClick={onClickFunc} />\n      <h2>Recent news</h2>\n      {articles.map(article => {\n        return (\n          <p key={article.id}>\n            <a href={article.webUrl} target=\"_blank\">\n              {article.webTitle}\n            </a>\n          </p>\n        );\n      })}\n      <button onClick={PreviousPage}>prev</button>\n      <button onClick={nextPage}>next</button>\n    </div>\n  );\n}\n\n//  INPUT\n\nfunction Input({ valueProp, onChangeProp }) {\n  const handleChangeProp = e => {\n    onChangeProp(e.target.value);\n  };\n\n  return (\n    <div className=\"button-wrap\">\n      <input value={valueProp} onChange={handleChangeProp}></input>\n    </div>\n  );\n}\n\n//  KNOPKA\n\nfunction Button({ onClick }) {\n  return (\n    <div className=\"modal-dialog\">\n      <div className=\"button-wrap\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={onClick}>\n          Search\n        </button>\n      </div>\n    </div>\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Guardian from \"./Guardian\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Guardian />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}